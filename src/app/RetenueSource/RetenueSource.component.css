/* ========== ROOT & GLOBAL STYLES ========== */
:root {
  --primary-color: #4a6ced;
  --primary-hover: #5f7deb;
  --secondary-color: #3cbfae;
  --text-dark: #2d3748;
  --text-medium: #4a5568;
  --text-light: #e2e8f0;
  --border-color: #e2e8f0;
  --card-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
  --card-shadow-hover: 0 8px 24px rgba(0, 0, 0, 0.2);
  --transition-fast: 0.2s ease;
  --transition-medium: 0.3s ease;
  --dark-bg: #1e293b;
  --dark-border: #4a5568;
}

/* Custom dark background class */
.custom-bg-dark {
  background-color: var(--dark-bg) !important;
  color: #ffffff;
}

/* Dark mode border styles */
:host-context(body.dark) {
  .border,
  .border.rounded,
  .border.rounded-1,
  .border.rounded-2,
  .border.rounded-3 {
    border-color: var(--dark-border) !important;
  }
}

/* ========== BASE LAYOUT STRUCTURE ========== */
:host {
  display: flex;
  padding: 30px;
  flex-direction: column;
  min-height: 100vh;
  font-family: 'Poppins', sans-serif;
  background-color: #f3f4f6;
  color: #333;
  transition: all 0.3s ease;
}

:host-context(body.dark) {
  background-color: #1a202c;
  color: #ffffff;

  /* Card styles in dark mode */
  .card {
    background: #2d3748;
    color: #ffffff;
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);
  }

  .card:hover {
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.3);
  }

  /* Dashboard header in dark mode */
  .dashboard-header {
    background: #2d3748;
    color: #ffffff;
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);
  }

  /* Breadcrumb colors in dark mode */
  .breadcrumb-item {
    color: #e2e8f0;
  }

  .breadcrumb-item.active {
    color: #ffffff;
  }

  .breadcrumb-separator {
    color: #e2e8f0;
  }

  /* Header text in dark mode */
  .header-subtitle {
    color: #e2e8f0;
  }

  /* Metric cards in dark mode */
  .metric-card {
    background: #2d3748;
    border-color: #4a5568;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  }

  .metric-card:hover {
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.3);
  }

  .metric-label {
    color: #e2e8f0;
  }

  .metric-value {
    color: #ffffff;
  }

  .currency {
    color: #e2e8f0;
  }

  /* Form controls in dark mode */
  .form-control, 
  .p-autocomplete-input {
    background-color: #1a202c;
    color: #ffffff;
    border-color: #4a5568;
  }

  .form-control:focus, 
  .p-autocomplete-input:focus {
    border-color: #3b82f6;
    box-shadow: 0 0 0 0.2rem rgba(59, 130, 246, 0.25);
  }

  /* Table styles in dark mode */
  .p-table {
    th {
      background-color: #1a202c;
      color: #ffffff;
      border-color: #4a5568;
    }

    td {
      color: #ffffff;
      border-color: #4a5568;
    }
  }

  /* Dialog/Drawer in dark mode */
  .p-drawer .p-drawer-content,
  .p-dialog .p-dialog-content {
    background: #2d3748;
    color: #ffffff;
  }

  .p-drawer .form-actions,
  .p-dialog .p-dialog-footer {
    background: #2d3748;
    border-color: #4a5568;
  }

  /* Context menu in dark mode */
  .p-contextmenu {
    background: #2d3748;
    border-color: #4a5568;

    .p-menuitem-link {
      color: #ffffff;

      &:hover {
        background: #4a5568;
      }
    }
  }

  /* Tags in dark mode */
  .p-tag {
    &.p-tag-info {
      background: #3b82f6;
      color: #ffffff;
    }
  }

  /* Buttons in dark mode */
  .p-button.p-button-secondary {
    background: #4a5568;
    border-color: #4a5568;
    color: #ffffff;

    &:hover {
      background: #374151;
      border-color: #374151;
    }
  }

  /* Empty state in dark mode */
  .empty-state {
    color: #e2e8f0;
  }
}

.main-content {
  flex: 1;
  display: flex;
  flex-direction: column;
  margin-left: 260px;
  transition: margin-left 0.3s ease;
}

.main-content.collapsed {
  margin-left: 80px;
}

/* ========== CARD COMPONENT ========== */
.card {
  padding: 1.5rem;
  border-radius: 12px;
  box-shadow: var(--card-shadow);
  display: flex;
  flex-direction: column;
  transition: all var(--transition-medium);
  background: white;
  margin: 0;
}

.card:hover {
  box-shadow: var(--card-shadow-hover);
  transform: translateY(-2px);
}

/* ========== TABLE STYLES ========== */
.p-table-container {
  flex: 1;
  width: 100%;
  overflow-x: auto;
  margin-top: 1rem;
}

.p-table {
  width: 100%;
  min-width: 0; /* Allows table to shrink below 1200px */
  
  th, td {
    padding: 0.75rem 1rem;
    white-space: nowrap;
  }
  
  th {
    background-color: #f8f9fa;
    position: sticky;
    top: 0;
    z-index: 1;
  }
}

/* ========== UTILITY COMPONENTS ========== */
.p-tag {
  padding: 0.15rem 0.5rem;
  font-size: 0.75rem;
  border-radius: 4px;
  
  &.p-tag-info {
    background: var(--primary-color);
    color: white;
    
    &:hover {
      background: var(--primary-hover);
    }
  }
}

/* ========== FORM ELEMENTS ========== */
.form-control, .p-autocomplete-input {
  padding: 0.5rem 0.75rem;
  font-size: 0.9rem;
  width: 100%;
  border: 1px solid var(--border-color);
  border-radius: 4px;
}

/* ========== DRAWER STYLES ========== */
.p-drawer {
  .p-drawer-content {
    padding: 1rem;
    display: flex;
    flex-direction: column;
    flex: 1;
    overflow-y: auto;
  }
  
  .form-actions {
    position: sticky;
    bottom: 0;
    background: white;
    padding: 1rem;
    border-top: 1px solid var(--border-color);
  }
}

/* ========== BREADCRUMB & HEADER ========== */
.breadcrumb-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1.5rem;
  flex-wrap: wrap;
  gap: 1rem;
  padding: 0 1rem;
}

.breadcrumb {
  display: flex;
  align-items: center;
  font-size: 14px;
  color: #888;
  
  .separator {
    margin: 0 6px;
  }
  
  .current {
    font-weight: 600;
    color: #333;
  }
}

/* ========== STATS GRID ========== */
.stats-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
  gap: 16px;
  margin-bottom: 1.5rem;
  padding: 0 1rem;
}

.stat-card {
  background: white;
  padding: 1.25rem;
  border-radius: 12px;
  box-shadow: var(--card-shadow);
  text-align: center;
  
  h3 {
    margin-bottom: 0.5rem;
    font-size: 16px;
    color: #555;
  }
  
  p {
    font-size: 20px;
    font-weight: 600;
    color: #222;
  }
}

/* ========== RESPONSIVE ADJUSTMENTS ========== */
@media (max-width: 992px) {
  .p-table {
    th, td {
      white-space: normal;
    }
  }
}

@media (max-width: 768px) {
  .main-content {
    margin-left: 0 !important;
  }
  
  .card {
    padding: 1rem;
    border-radius: 10px;
  }
  
  .breadcrumb-header {
    flex-direction: column;
    align-items: flex-start;
  }
  
  .p-dialog {
    width: 95vw !important;
  }
}

/* ========== ANIMATIONS & UTILITIES ========== */
.fade-in {
  animation: fadeSlide 0.3s ease-out;
}

@keyframes fadeSlide {
  0% { opacity: 0; transform: translateY(-5px); }
  100% { opacity: 1; transform: translateY(0); }
}

.empty-state {
  padding: 2rem;
  text-align: center;
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  
  iframe {
    max-width: 200px;
    height: auto;
  }
}

/* ========== CONTEXT MENU ========== */
.p-contextmenu {
  width: 250px;
  max-width: 100%;
}



/* ========== DASHBOARD HEADER ========== */
.dashboard-header {
  padding: 1.5rem 2rem;
  background: white;
  border-radius: 12px;
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.05);
  margin-bottom: 1.5rem;
}

.header-content {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.breadcrumb-nav {
  margin-bottom: 0.5rem;
}

.breadcrumb {
  display: flex;
  align-items: center;
  font-size: 0.875rem;
}

.breadcrumb-item {
  color: var(--text-medium);
  transition: color 0.2s ease;
}

.breadcrumb-item:hover {
  color: var(--primary-color);
}

.breadcrumb-item.active {
  color: var(--text-dark);
  font-weight: 600;
}

.breadcrumb-separator {
  margin: 0 0.5rem;
  color: black;
}

.header-main {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.header-title {
  font-size: 1.75rem;
  font-weight: 700;
  margin: 0;
}

.title-gradient {
  background: linear-gradient(90deg, #1860a8 0%, #fb9332 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

.header-subtitle {
  color: var(--text-medium);
  font-size: 1rem;
  margin: 0;
}

/* ========== MODERN METRICS GRID ========== */
.metrics-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
  gap: 1.5rem;
  margin-bottom: 2.5rem;
}

.metric-card {
  background: white;
  border-radius: 16px;
  padding: 1.75rem;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
  position: relative;
  overflow: hidden;
  border: 1px solid rgba(0, 0, 0, 0.03);
}

.metric-card:hover {
  transform: translateY(-6px);
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
}

.metric-content {
  position: relative;
  z-index: 2;
}

.metric-label {
  font-size: 0.95rem;
  color: var(--text-medium);
  margin-bottom: 0.75rem;
  font-weight: 500;
  letter-spacing: 0.2px;
}

.metric-value {
  font-size: 2rem;
  font-weight: 700;
  color: var(--text-dark);
  margin: 0;
  line-height: 1.2;
  font-feature-settings: "tnum";
}

.currency {
  font-size: 1.1rem;
  font-weight: 500;
  color: var(--text-medium);
  margin-left: 2px;
}

.metric-decoration {
  position: absolute;
  bottom: 0rem;
  right: 0rem;
  width: 60px;
  height: 60px;
  border-radius: 18px;
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0.5;
  transition: all 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
  transform-origin: bottom right;
}

.metric-decoration i {
  font-size: 2rem;
  
}

/* Color variants with modern vibrant tones */
.metric-card .metric-decoration { 
  background: linear-gradient(135deg, #1860a8 0%, #3b82f6 100%);
}
.metric-card.accent-2 .metric-decoration { 
  background: linear-gradient(135deg, #fb9332 0%, #f97316 100%);
}
.metric-card.accent-3 .metric-decoration { 
  background: linear-gradient(135deg, #10b981 0%, #059669 100%);
}
.metric-card.accent-4 .metric-decoration { 
  background: linear-gradient(135deg, #8b5cf6 0%, #7c3aed 100%);
}

/* Hover effects */
.metric-card:hover .metric-decoration {
  opacity: 0.7;
  transform: scale(1.1);
  border-radius: 24px;
}

/* Gradient accents for modern touch */
.metric-card::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 4px;
  height: 100%;
  background: linear-gradient(to bottom, #1860a8, #3b82f6);
  opacity: 0;
  transition: opacity 0.3s ease;
}

.metric-card.accent-2::after {
  background: linear-gradient(to bottom, #fb9332, #f97316);
}

.metric-card.accent-3::after {
  background: linear-gradient(to bottom, #10b981, #059669);
}

.metric-card.accent-4::after {
  background: linear-gradient(to bottom, #8b5cf6, #7c3aed);
}

.metric-card:hover::after {
  opacity: 1;
}

/* ========== RESPONSIVE ADJUSTMENTS ========== */
@media (max-width: 768px) {
  .metrics-grid {
    grid-template-columns: 1fr 1fr;
    gap: 1.25rem;
  }
  
  .metric-card {
    padding: 1.5rem;
  }
}

@media (max-width: 480px) {
  .metrics-grid {
    grid-template-columns: 1fr;
  }
  
  .metric-value {
    font-size: 1.75rem;
  }
  
  .metric-decoration {
    width: 60px;
    height: 60px;
  }
}

/* ========== RESPONSIVE DIALOG STYLES ========== */
:host ::ng-deep {
  /* Confirmation Dialog Styles */
  .custom-confirm-dialog {
    .p-dialog-content {
      padding: 1.5rem;
    }
    
    .p-confirm-dialog-message {
      margin: 1rem 0;
      line-height: 1.5;
    }
    
    .p-confirm-dialog-icon {
      font-size: 2rem;
      color: var(--yellow-600);
    }
    
    .p-dialog-footer {
      padding: 1rem 1.5rem;
      display: flex;
      gap: 0.5rem;
      justify-content: flex-end;
    }
  }

  /* Custom Dialog Styles */
  .custom-dialog {
    .p-dialog-header {
      padding: 1.25rem;
    }
    
    .p-dialog-content {
      padding: 0 1.25rem 1.25rem 1.25rem;
    }
    
    .p-dialog-footer {
      padding: 1rem 1.25rem;
    }
  }

  /* Custom Drawer Styles */
  .custom-drawer {
    .p-drawer-header {
      padding: 1.25rem;
    }
    
    .p-drawer-content {
      padding: 0;
    }
  }

  /* Mobile Responsive Adjustments */
  @media screen and (max-width: 640px) {
    .p-dialog {
      .p-dialog-header {
        padding: 1rem;
      }
      
      .p-dialog-content {
        padding: 0 1rem 1rem 1rem;
      }
      
      .p-dialog-footer {
        padding: 1rem;
        flex-direction: column;
        
        button {
          width: 100%;
          margin: 0.25rem 0;
        }
      }
    }

    .p-drawer {
      .p-drawer-header {
        padding: 1rem;
      }
      
      .p-drawer-content {
        padding: 0;
      }
    }

    .p-confirm-dialog {
      .p-dialog-content {
        padding: 1rem;
      }
      
      .p-dialog-footer {
        padding: 1rem;
        flex-direction: column;
        
        button {
          width: 100%;
          margin: 0.25rem 0;
        }
      }
    }

    /* Table adjustments in dialog */
    .p-dialog .p-datatable {
      .p-datatable-thead > tr > th,
      .p-datatable-tbody > tr > td {
        padding: 0.75rem 0.5rem;
      }
    }
  }
}

/* Dark mode adjustments for dialogs */
:host-context(body.dark) ::ng-deep {
  .custom-confirm-dialog,
  .custom-dialog,
  .custom-drawer {
    .p-dialog-header,
    .p-dialog-content,
    .p-dialog-footer,
    .p-drawer-header,
    .p-drawer-content {
      background: var(--dark-bg);
      color: #ffffff;
    }

    .p-dialog-header-icon {
      color: #ffffff;
    }
  }

  /* Make all PrimeNG icons white in dark mode */
  .pi {
    color: #ffffff;
  }

  /* Specific icon overrides if needed */
  .pi-exclamation-triangle {
    color: var(--yellow-500); /* Keep warning icon yellow */
  }

  .pi-check-circle {
    color: var(--green-500); /* Keep success icon green */
  }

  .pi-times-circle {
    color: var(--red-500); /* Keep error icon red */
  }

  /* Icon adjustments in specific components */
  .p-button .pi {
    color: inherit; /* Keep button icons matching button text color */
  }

  .p-inputicon .pi {
    color: #ffffff;
    opacity: 0.7;
  }

  .p-menubar .pi {
    color: #ffffff;
  }

  .p-datatable {
    .pi-sort,
    .pi-sort-up,
    .pi-sort-down {
      color: #ffffff;
      opacity: 0.8;
    }
  }

  /* Hover states */
  .p-button:not(.p-disabled):hover .pi,
  .p-menuitem-link:hover .pi {
    color: #ffffff;
    opacity: 1;
  }

  /* Active/Selected states */
  .p-menuitem.p-highlight .pi,
  .p-tabview-selected .pi {
    color: #ffffff;
    opacity: 1;
  }
}

        /* Dark mode style for select label */
        :host-context(.dark-mode) :host ::ng-deep .p-select-label {
          color: #ffffff !important;
      }


      /* Dark mode adjustments for p-select-label */
:host-context(body.dark) {
  .p-select-label {
    color: #ffffff !important;
  }

  /* Also handle the placeholder state */
  .p-select-label.p-placeholder {
    color: rgba(255, 255, 255, 0.7) !important;
  }

  /* Force dark mode styles for autocomplete panel and items */
  :host ::ng-deep .p-autocomplete-panel {
    background-color: #2d3748 !important;
    border-color: #4a5568 !important;

    .p-autocomplete-items {
      background-color: #2d3748 !important; /* Ensure list background is dark */
      .p-autocomplete-item {
        color: #ffffff !important;
        /* Ensure all text within the item is white */
        span, div, p, strong, small {
          color: #ffffff !important;
        }

        /* Direct targeting of small tag within item */
        small {
          color: #ffffff !important;
        }

        &:hover {
          background-color: #374151 !important;
          color: #ffffff !important; /* Ensure hover text is white */
          span, div, p, strong, small {
            color: #ffffff !important;
          }
          small {
            color: #ffffff !important;
          }
        }
      }
    }
  }

  /* Even more aggressive targeting for small tags within autocomplete panels */
  :host ::ng-deep .p-autocomplete-panel small {
    color: #ffffff !important;
  }

  /* Force dark mode styles for the autocomplete list itself */
  :host ::ng-deep .p-autocomplete-list {
    color: #ffffff !important;
  }
}

/* Dark mode datatable hover styles */
:host-context(body.dark) {
  .p-datatable.p-datatable-hoverable .p-datatable-tbody > tr:not(.p-highlight):not(.p-datatable-row-selected):hover {
    background-color: #ffffff !important;
    color: #ffffff !important;
  }
}

/* Dark mode style for select label */
:host-context(.dark-mode) :host ::ng-deep .p-select-label {
  color: #ffffff !important;
}

/* ========== CHARTS ROW LAYOUT ========== */
.charts-grid {
  display: grid;
  grid-template-columns: 1fr;
  gap: 1.5rem;
  margin-bottom: 1.5rem;
}

@media (min-width: 992px) {
  .charts-grid {
    grid-template-columns: 1fr 1fr;
  }
}

/* Remove old .charts-row, .charts-col, .charts-col-left, .charts-col-right, .chart-container */
.charts-row, .charts-col, .charts-col-left, .charts-col-right, .chart-container {
  display: unset !important;
  grid-template-columns: unset !important;
  gap: unset !important;
  margin-bottom: unset !important;
  padding: unset !important;
  min-width: unset !important;
  min-height: unset !important;
  height: unset !important;
  width: unset !important;
}

.card {
  padding: 1.5rem;
  border-radius: 12px;
  box-shadow: var(--card-shadow);
  display: flex;
  flex-direction: column;
  transition: all var(--transition-medium);
  background: white;
  margin: 0;
}

@media (max-width: 768px) {
  .card {
    padding: 1rem;
    border-radius: 10px;
  }
}

.p-chart {
  width: 100% !important;
  height: 220px !important;
  max-width: 100%;
}

@media (max-width: 768px) {
  .p-chart {
    height: 160px !important;
  }
}
@media (max-width: 480px) {
  .p-chart {
    height: 120px !important;
  }
}


